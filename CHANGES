======================================================================
Changes since version 1.3.2
======================================================================

General Changes
===============

- Support for Xcode 6.0 and iOS 8.0.

- When an application goes to the background, Ice now closes the
  acceptors associated with object adapters. Applications in the
  background can't accept connections. Ice re-creates the acceptors
  when the application comes back to the foreground.
  
  Previously, the acceptors weren't closed but iOS still reclaimed the
  associated sockets. As a result, the object adapters weren't able to
  accept connections when the application came back to the foreground
  and the application had to destroy and re-create the object
  adapters. With this fix, this is no longer an issue.

  Established connections might still be closed by iOS unless Ice.Voip
  is enabled.


======================================================================
Changes since version 1.3.1
======================================================================

General Changes
===============

- Support for Xcode 5.1 and iOS 7.1.

C++ Changes
===========

- Fixed a bug which could trigger an Ice::NullHandleException on
  communicator destruction if a custom instrumentation observer was
  set in the initialization data of the communicator.


======================================================================
Changes since version 1.3.0
======================================================================

General Changes
===============

- Added support for Xcode 5.0 and the 64-bit ARM architecture. Ice
  Touch now requires iOS 5.1.1 or later.

- Ice Touch is now based on Ice 3.5.1.

- Fixed a bug in the Xcode plugin where generated files weren't
  cleaned up if a custom output directory was specified.


Objective-C Changes
===================

- Added support for SOCKSv4 proxies. This allows outgoing TCP & SSL
  connections using IPv4 to be mediated by a network proxy service.

- Fixed a bug where the generated code would fail to compile when an
  exception inheriting another exception was declared in separate
  Slice files.


======================================================================
Changes since version 1.2.2
======================================================================

General Changes
===============

- Ice Touch is now based on Ice 3.5.0. As a result, it supports the
  following new features:

  * A new 1.1 encoding.

  * A new "compact" encoding for Slice classes and exceptions.

  * Slice class compact IDs.

  * Optional data members in classes and exceptions, and optional
    parameters in operations.

  * Slice enumerators can now be assigned arbitrary values.

  * IceMX metrics support.

  * C++ 11 support.

- Updated Ice Touch to support Xcode 4.6 and iOS 6.

- Added support to static library project type to Xcode Plug-in.

- Added client side libraries for IceStorm and IceGrid.

- Fixed Xcode plug-in to avoid the need to setup HEADER / LIBRARY
  search paths for non SDK builds.


Objective-C Changes
===================

- Changed the signature of the blobject API methods to match the
  change in semantics of the blobject API. Instead of being provided
  with the data for input and output parameters, the ice_invoke
  methods is now provided with the full encapsulation of the input and
  output parameters for the operation.

  As a result, the ICEBlobject protocol ice_invoke selector is now
  ice_invoke:outEncaps:current: (previously
  ice_invoke:outParams:current:). The proxy ice_invoke method selector
  is now ice_invoke:mode:inEncaps:outEncaps: (previously
  ice_invoke:mode:inParams:outParams:).

- The OS X command line SDK is no longer compiled with garbage
  collection support enabled. The use of ARC is now preferred.

- Added support for ARC (Automatic Reference Counting).

- Added support for Ice::ConnectionInfo and Ice::EndpointInfo local
  interfaces (Objective-C).

- Added support for implicit contexts.

- Updated Glacier2 module prefix to GLACIER2 for consistency with
  other Ice module prefixes.


======================================================================
Changes since version 1.2.1
======================================================================

- Fixed issue where TCP and SSL transport entry points wouldn't be
  found when compiling in release mode with symbol stripping enabled.

- Use #pragma once in generated header files instead of
  #ifndef/#define/#endif guard.

- Updated Ice Touch to support Xcode 4.5


======================================================================
Changes since version 1.2.0
======================================================================

- Fixed memory leak where Slice class or struct data members would be
  incorrectly retained twice.

- Updated Ice Touch to support Xcode 4.3.


======================================================================
Changes since version 1.1.1
======================================================================

- Updated Ice Touch to support Xcode 4.2 and iOS 5

- Added new C++ SDKs for Cocoa, iPhone and iPhone Simulator

- Updated Ice Touch to use clang++ compiler

- Fixed a bug in slice2objc that caused conflicts with names defined
  in the global scope


======================================================================
Changes since version 1.1.0
======================================================================

- Update Ice Touch Xcode plug-in to support Xcode 3.2, Xcode 4.0,
  and Xcode 4.1

- Updated Ice Touch to support OS X 10.7 (Lion) and Xcode 4.1

- Updated build system to create fat binaries with armv6 and armv7
  architectures when building the iPhoneOS SDK

- Updated build system to work with Xcode installed in non-standard
  location


======================================================================
Changes since version 1.0.0
======================================================================

- Added ability to define default values for Slice data members. For
  example, you can write:

  // Slice
  class C
  {
      int i = 2;
      string name = "John";
  };

- Updated Ice Touch to support iOS 4.

- Fixed bug that could cause GC resurrection errors.

- Added support for accessory transport. This transport is built on
  top of the iPhone OS External Accessory framework and allows Ice
  clients to talk to iPhone accessories over Bluetooth or USB. For
  information on the Ice server-side running on iPhone accessories,
  please contact us at info@zero.com.

- Replaced the AMI mapping. Applications that use the AMI mapping from
  Ice Touch 1.0 must be updated. Refer to the Ice manual for more
  information on the new mapping.

- SSL now works with the iOS simulator.

- The iOS simulator builds now use static linking.

- The Xcode plug-in now adds -all_load to the linker flags. See
  http://developer.apple.com/mac/library/qa/qa2006/qa1490.html for
  more information.

- The demos and tests were updated to support the iPad screen
  resolution.

- Ice threads are now registered with the garbage collector.

- The ICECallbackOnMainThread helper has been removed. The new Ice
  dispatcher facility should be used instead.

- Unmarshaling now supports size checks to prevent memory over
  allocations by malicious clients or servers.

- The Xcode plug-in now supports both 32- and 64-bit architectures.


======================================================================
Changes since version 0.1.0
======================================================================

- Fixed several memory leaks.

- SSL support is no longer available with the iPhone simulator.

- Set NSException.reason string for Ice local exceptions.

- Fixed several bugs and updated the name mangling for slice2objc.

- Added support for multi-architecture builds in the same source tree.
  IceTouch now supports four different build types:

  - OS X command line
  - OS X SDK (for Cocoa apps)
  - iPhone OS SDK
  - iPhone Simulator SDK

- The Mac build now uses the native Ice socket and ssl transports.
  This means that Mac/Cocoa applications use the same SSL properties
  as other Ice for C++ applications.

- The iPhone library demo can now securely connect to both
  demo2.zeroc.com and a locally hosted demo.

- Added username/password field to the iPhone library demo.

- Fixed a bug in the iPhone chat demo where entering only white
  space in the input field would cause an exception to be thrown.

- Fixed a bug in the iPhone library & chat demos where the
  Glacier2::RouterPrx::destroySession was not called, so the
  Glacier2 session was not destroyed.

- Added "library" and "chat" demos for Cocoa.

- Added iPhone router demo.

- Added simple router client demo/Ice/helloRouter.

- Added support for GC under Mac OS.

- Changed the outParams parameter of ICEBlobject ice_invoke to
  NSMutableData**.

- Fixed a bug in ICEConnection::createProxy where the created proxy
  was not returned.

- Added ICECallbackOnMainThreadServant to ensure methods are
  dispatched in the main thread.

- Added support for tie servants. See server-side mapping chapter in
  the manual and demo/iPhone/chat for an example.

- Added --depend-xml command line option to slice2objc.
