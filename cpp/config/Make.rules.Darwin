# **********************************************************************
#
# Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
#
# This copy of Ice Touch is licensed to you under the terms described in the
# ICE_TOUCH_LICENSE file included in this distribution.
#
# **********************************************************************

#
# This file is included by Make.rules when building Cocoa or iOS C++ SDKs.
#

ifeq ($(COMPILE_FOR_IPHONE),yes)
    SDK_NAME = iphoneos$(IOS_SDK_VERSION)
    ifeq ($(CXXARCHFLAGS),)
        ifeq ($(OPTIMIZE),yes)
            CXXARCHFLAGS = -arch armv7 -arch armv7s -arch arm64
        else
            CXXARCHFLAGS = -arch armv7
        endif
    endif
endif

ifeq ($(COMPILE_FOR_IPHONE_SIMULATOR),yes)
     COMPILE_FOR_IPHONE = yes
     SDK_NAME = iphonesimulator$(IOS_SDK_VERSION)
     ifeq ($(CXXARCHFLAGS),)
        ifeq ($(OPTIMIZE),yes)
            CXXARCHFLAGS = -arch i386 -arch x86_64
        else
            CXXARCHFLAGS = -arch i386
        endif
    endif
endif

ifneq ($(COMPILE_FOR_IPHONE),yes)
    SDK_NAME = macosx$(OSX_SDK_VERSION)
    ifeq ($(CXXARCHFLAGS),)
        ifeq ($(OPTIMIZE),yes)
            CXXARCHFLAGS    := -arch i386 -arch x86_64
        endif
    endif
endif

CC     = xcrun -sdk $(SDK_NAME) clang
CXX    = xcrun -sdk $(SDK_NAME) clang++

CFLAGS                  = -Wall
CXXFLAGS	        = -Wall

OPT_FLAGS		=
ifeq ($(OPTIMIZE_SPEED),yes)
  OPT_FLAGS		= -O2
endif

ifeq ($(OPTIMIZE_SIZE),yes)
  OPT_FLAGS             = -Oz
endif

ifeq ($(OPTIMIZE),yes)
     CFLAGS	:= $(OPT_FLAGS) -DNDEBUG $(CFLAGS)
     CXXFLAGS	:= $(OPT_FLAGS) -DNDEBUG $(CXXFLAGS)
else
     CFLAGS	:= -g $(CFLAGS)
     CXXFLAGS	:= -g $(CXXFLAGS)
endif

ifeq ($(CPP11), yes)
    CXXFLAGS += --std=c++11 --stdlib=libc++
    libsuffix = -libc++
endif

OBJDIR = $(PLATFORM_NAME)$(libsuffix)

CPPPLATFORMFLAGS    += $(CXXARCHFLAGS)

ifeq ($(COMPILE_FOR_IPHONE),yes)
    ifeq ($(COMPILE_FOR_IPHONE_SIMULATOR),yes)
        CPPPLATFORMFLAGS   += -mios-simulator-version-min=$(IOS_TARGET_MIN_SDK_VERSION)
    else
        CPPPLATFORMFLAGS   += -miphoneos-version-min=$(IOS_TARGET_MIN_SDK_VERSION)
    endif
    LDPLATFORMFLAGS     := $(CPPPLATFORMFLAGS) -ObjC
    CODESIGN            = xcrun -sdk $(SDK_NAME) codesign
    CODESIGN_ALLOCATE   = xcrun -sdk $(SDK_NAME) codesign_allocate
else
    CPPPLATFORMFLAGS    += -mmacosx-version-min=$(OSX_TARGET_MIN_SDK_VERSION)
    LDPLATFORMFLAGS     := $(CPPPLATFORMFLAGS)
endif

ifdef ice_src_dist
    shlibldflags := $(LDPLATFORMFLAGS) $(CXXFLAGS) -L$(libdir)
else
    shlibldflags = $(LDPLATFORMFLAGS) $(CXXFLAGS) -L$(ice_dir)/$(libsubdir)
endif

CPPPLATFORMFLAGS += -pthread

mksoname         = $(if $(2),lib$(1).$(2).dylib,lib$(1).dylib)

ifeq ($(STATICLIBS),yes)
    mklibname	  = lib$(1).a
    mklibfilename = lib$(1).a
else
    mklibname     = lib$(1).dylib
    mklibfilename = $(if $(2),lib$(1).$(2).dylib,lib$(1).dylib)
endif

mklib         = libtool -static -o $(1) $(2)

ifeq ($(COMPILE_FOR_IPHONE),yes)
    mktestname2   = $(if $(filter cpp test src demo,$(shell basename $(1))),$(top_srcdir)/test/iPhone/$(shell basename $(1))_$(2).bundle/lib$(2).dylib,$(call mktestname2,$(shell dirname $(1)),$(shell basename $(1))_$(2)))
    mktestname    = $(call mktestname2,$(shell pwd),$(1))
    mktest 	  = $(CXX) -bundle $(shlibldflags) -o $(1) $(2) $(3)
else
    mktest 	  = $(CXX) $(LDFLAGS) -o $(@) $(2) $(3)
endif


ifeq ($(COMPILE_FOR_COCOA), yes)
  ifeq ($(OPTIMIZE),yes)
     #
     # Disable all warnings to avoid OpenSSL deprecation warnings
     #
     OPENSSL_FLAGS       = -w
  endif
endif

ifeq ($(COMPILE_FOR_IPHONE),yes)
ICE_OS_LIBS     = -ldl -framework UIKit -framework CFNetwork -framework Security -framework Foundation -framework ExternalAccessory
else ifeq ($(COMPILE_FOR_COCOA),yes)
ICE_OS_LIBS     = -framework CoreServices -framework Security -lbz2 -liconv -lssl -lcrypto
else
BASELIBS        = -lIceUtil
endif

LIBS            = -L$(libdir) -lIceCpp$(libsuffix) $(ICE_OS_LIBS)
ICESSL_LIBS     = $(LIBS)
