# **********************************************************************
#
# Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
#
# This copy of Ice Touch is licensed to you under the terms described in the
# ICE_TOUCH_LICENSE file included in this distribution.
#
# **********************************************************************

# ----------------------------------------------------------------------
# Don't change anything below this line!
# ----------------------------------------------------------------------

SHELL			= /bin/sh
VERSION			= 1.4.0
VERSION_MAJOR   = 1
VERSION_MINOR   = 4
VERSION_PATCH   = 0
SOVERSION		= 14
SHORT_VERSION	= 1.4

INSTALL			= cp -fp
INSTALL_PROGRAM	= ${INSTALL}
INSTALL_LIBRARY	= ${INSTALL}
INSTALL_DATA	= ${INSTALL}

OBJEXT			= .o

UNAME			:= $(shell uname)
MACHINE_TYPE	:= $(shell uname -m)

#
# Ensure ice_language has been set by the file that includes this one.
#
ifndef ice_language
$(error ice_language must be defined)
endif

ifeq ($(ICE_HOME),)
ice_dir := $(top_srcdir)/../ice-dev
else
ice_dir	:= $(ICE_HOME)
endif

ifeq ($(OPTIMIZE_SPEED),yes)
    OPTIMIZE		= yes
else ifeq ($(OPTIMIZE_SIZE),yes)
    OPTIMIZE		= yes
else ifeq ($(OPTIMIZE),yes)
    OPTIMIZE_SPEED	= yes
endif

ifeq ($(IOS_TARGET_MIN_SDK_VERSION),)
     IOS_TARGET_MIN_SDK_VERSION = 7.1
endif

ifeq ($(OSX_TARGET_MIN_SDK_VERSION),)
    OSX_TARGET_MIN_SDK_VERSION = 10.9
endif

ifneq ($(XCODE_PATH),)
    export DEVELOPER_DIR := $(XCODE_PATH)/Contents/Developer
endif

STATICLIBS	= yes

ifeq ($(COMPILE_FOR_IPHONE_SIMULATOR),yes)
    PLATFORM_NAME = iphonesimulator
else ifeq ($(COMPILE_FOR_IPHONE),yes)
    PLATFORM_NAME = iphoneos
else
    PLATFORM_NAME = macosx
	COMPILE_FOR_OSX = yes
endif

slicedir 	= $(ice_dir)/slice
bindir		= $(top_srcdir)/SDKs/$(sdksubdir)/bin
sdkdir		= $(top_srcdir)/SDKs/$(sdksubdir)/$(PLATFORM_NAME).sdk
libdir		= $(sdkdir)/usr/local/lib
ifeq ($(COMPILE_TRANSLATORS),yes)
includedir	= $(ice_dir)/cpp/include
else
includedir	= $(sdkdir)/usr/local/include
endif

ifeq ($(COMPILE_FOR_IPHONE),yes)
    SDK_NAME = iphoneos$(IOS_SDK_VERSION)
    ifeq ($(ARCHFLAGS),)
        ifeq ($(OPTIMIZE),yes)
            ARCHFLAGS = -arch armv7 -arch armv7s -arch arm64
        else
            ARCHFLAGS = -arch armv7 -arch arm64
        endif
    endif
    # Set the achitecture to ARM for dependencies
    CPPPLATFORMFLAGS = -arch armv7
endif

ifeq ($(COMPILE_FOR_IPHONE_SIMULATOR),yes)
    COMPILE_FOR_IPHONE = yes
    SDK_NAME = iphonesimulator$(IOS_SDK_VERSION)
    ifeq ($(ARCHFLAGS),)
        ARCHFLAGS = -arch i386 -arch x86_64
    endif
endif

ifneq ($(COMPILE_FOR_IPHONE),yes)
    SDK_NAME = macosx$(OSX_SDK_VERSION)
    ifeq ($(ARCHFLAGS),)
        ARCHFLAGS = -arch x86_64
    endif
endif

ifeq ($(COMPILE_TRANSLATORS),)
    CC     = xcrun -sdk $(SDK_NAME) clang
    CXX    = xcrun -sdk $(SDK_NAME) clang++
else
    # No SDK when building the translators. When specifying an SDK,
    # Xcode doesn't use the headers/libraries from /usr or /usr/local.
    CC     = xcrun clang
    CXX    = xcrun clang++
endif

OPT_FLAGS =
ifeq ($(OPTIMIZE_SPEED),yes)
    OPT_FLAGS	= -O2
endif
ifeq ($(OPTIMIZE_SIZE),yes)
    OPT_FLAGS 	= -Oz
endif

COMPFLAGS = -Wall
ifeq ($(OPTIMIZE),yes)
    COMPFLAGS	:= $(OPT_FLAGS) -DNDEBUG $(COMPFLAGS)
else
    COMPFLAGS	:= -g $(COMPFLAGS)
endif

COMPFLAGS += $(ARCHFLAGS)

OBJDIR = $(PLATFORM_NAME)

ifeq ($(COMPILE_FOR_IPHONE),yes)
    ifeq ($(COMPILE_FOR_IPHONE_SIMULATOR),yes)
        CPPPLATFORMFLAGS   += -mios-simulator-version-min=$(IOS_TARGET_MIN_SDK_VERSION)
    else
        CPPPLATFORMFLAGS   += -miphoneos-version-min=$(IOS_TARGET_MIN_SDK_VERSION)
    endif
else
    CPPPLATFORMFLAGS    += -mmacosx-version-min=$(OSX_TARGET_MIN_SDK_VERSION)
endif

LDPLATFORMFLAGS	 := $(CPPPLATFORMFLAGS)
CPPPLATFORMFLAGS += -pthread -fvisibility=hidden

ICECPPFLAGS		= -I$(slicedir)
SLICE2OBJCFLAGS	= $(ICECPPFLAGS)
SLICE2CPPFLAGS	= $(ICECPPFLAGS)
CPPFLAGS		= -I$(includedir) $(CPPPLATFORMFLAGS)

SLICE2OBJC	 	= $(bindir)/slice2objc
SLICE2CPP  		= $(bindir)/slice2cpp

mklibname	  = lib$(1).a
mklibfilename = lib$(1).a
mklib		  = if [ ! -d "$(dir $1)" ]; then mkdir -p $(dir $1); fi; \
		  	    echo "libtool -static -o $1 $2"; \
				rm -f $(1); \
				libtool -no_warning_for_no_symbols -static -o $(1) $(2)

ifeq ($(mksoname),)
    mksoname		= $(if $(2),lib$(1).so.$(2),lib$(1).so)
endif

ifndef mklibtargets
    ifeq ($(STATICLIBS),yes)
	    mklibtargets	= $(3)
    else ifeq ($(COMPILE_FOR_IPHONE_SIMULATOR),yes)
	    mklibtargets	= $(3)
    else
	    mklibtargets	= $(1) $(2) $(3)
    endif
endif

ifeq ($(installlib),)
    ifeq ($(STATICLIBS),yes)
	installlib	= $(INSTALL) $(2)/$(5) $(1); \
			  chmod a+rx $(1)/$(5)
    else
	installlib	= $(INSTALL) $(2)/$(3) $(1); \
			  rm -f $(1)/$(4); ln -s $(3) $(1)/$(4); \
			  rm -f $(1)/$(5); ln -s $(4) $(1)/$(5); \
			  chmod a+rx $(1)/$(3)
    endif
endif

ifeq ($(installdata),)
    installdata		= $(INSTALL_DATA) $(1) $(2); \
			  chmod a+r $(2)/$(notdir $(1))
endif

ifeq ($(installprogram),)
    installprogram	= $(INSTALL_PROGRAM) $(1) $(2); \
			  chmod a+rx $(2)/$(notdir $(1))
endif

ifeq ($(mkdir),)
    mkdir		= mkdir $(1) ; \
			  chmod a+rx $(1)
endif

#
# mkheader ORIG,DEST
#
mkheader = echo "cp $1 $2"; \
		   mkdir -p $(dir $2); \
		   cp $1 $2; \
		   chmod a+r $2; \

#
# mkobj FILE.[cpp|m|mm],FILE.o,CPPFLAGS,COMPILER,COMPFLAGS
#
mkobj = echo "$(if $4,$4,$(CXX)) $(if $3,$3,$(CPPFLAGS)) $(if $5,$5,$(COMPFLAGS)) -c $1 -o $2"; \
		if [ -n "$(dir $2)" -a ! -d "$(dir $2)" ]; then mkdir -p $(dir $2); fi; \
		$(if $4,$4,$(CXX)) -c $1 -o $2 $(if $3,$3,$(CPPFLAGS)) $(if $5,$5,$(COMPFLAGS)) || exit 1; \
		mkdir -p $(dependdir); \
		$(CXX) -DMAKEDEPEND -MM -MT $2 $(if $3,$3,$(CPPFLAGS)) -c $1 > $(dependdir)/$(notdir $(2:.o=.d)) \

#
# mkslice FILE.ice,STEM,[HEADERDIR,OUTPUTDIR,FLAGS,TRANSLATOR]
#
mkslice = echo "$6 $5 $(if $4,--output-dir $4,) $1"; \
		  if [ -n "$3" -a ! -d "$3" ]; then mkdir -p $3; fi; \
		  if [ -n "$4" -a ! -d "$4" ]; then mkdir -p $4; fi; \
		  $6 $5 $(if $4,--output-dir $4,) $1 || exit 1; \
		  if [ -n "$3" ]; then mv $(if $4,$4/$2.h,$2.h) $3/; fi; \
		  if [ ! -d $(dependdir) ]; then mkdir -p $(dependdir); fi; \
		  if [ -n "$3" ]; \
		  then \
			  $6 $5 --depend $1 | $(ice_dir)/config/makedepend.py "$3/" > $(dependdir)/$2.ice.d; \
		  else \
		  	  $6 $5 --depend $1 > $(dependdir)/$2.ice.d; \
          fi

all::

install-common::
	@if test ! -d $(prefix) ; \
	then \
	    echo "Creating $(prefix)..." ; \
	    $(call mkdir,$(prefix)) ; \
	fi
	@if test ! -f $(prefix)/ICE_TOUCH_LICENSE ; \
	then \
	    $(call installdata,$(top_srcdir)/../ICE_TOUCH_LICENSE,$(prefix)) ; \
	fi
	@if test ! -f $(prefix)/LICENSE ; \
	then \
	    $(call installdata,$(top_srcdir)/../LICENSE,$(prefix)) ; \
	fi
